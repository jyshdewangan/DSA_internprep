Q. Count number of ones in binary representation of n.

int count1(int n){
	int count=0;
	while(n>0){
		n=n&(n-1);
		count++;
	}
	return count;
}
EXPLANATION:
Notice what x - 1 does to bit representation of x.
x - 1 would find the first set bit from the end, and then set it to 0, and set all the bits following it.

Which means if x = 10101001010100
                              ^
                              |
                              |
                              |

                       First set bit from the end
Then x - 1 becomes 10101001010(011)

All other bits in x - 1 remain unaffected.
This means that if we do (x & (x - 1)), it would just unset the last set bit in x (which is why x&(x-1) 
is 0 for powers of 2).



2^0 -> 1
2^1 -> 10
2^2 -> 100
2^3 -> 1000
2^4 -> 10000
This can be used to determine first occuring one from last. for loop in i: [A&(1<<i)]

BITSET:
bitset starts its indexing backward that is for 10110, 0 are at 0th and 3rd indices whereas 1 are at 
1st 2nd and 4th indices.

